# 定义处理进程的用户和数量
user  nginx;
worker_processes  1;

# 定义错误日志
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # 定义日志格式
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # 这是我们服务器配置的核心部分
    server {
        # 监听80端口 (标准的HTTP端口)
        listen 80;

        # 网站的根目录，对应我们Dockerfile里复制静态文件的位置
        root /usr/share/nginx/html;
        index index.html;

        # 规则1: 对于所有访问根路径的请求
        location / {
            # 尝试直接查找文件，如果找不到，就返回 index.html
            # 这对于单页面应用(SPA)的路由至关重要
            try_files $uri $uri/ /index.html;
        }

        # 规则2: 对于所有以 /api/ 开头的请求
        location /api/ {
            # 将这些请求反向代理到后端服务
            # "backend" 是我们下一步在docker-compose.yml里给后端服务起的名字
            # Docker内置的DNS会让 "backend" 这个名字自动解析到后端容器的IP地址
            proxy_pass http://backend:8001/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}